package PigLatin;

import java.io.Console;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.print.attribute.standard.Media;



public class PigDriver {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner input = new Scanner(System.in);
		System.out.println("Give me a string");
		String a = input.nextLine();
		
		System.out.println(Con(a) +
		ConCon(a) +
		ConVowel(a));
		
		
		
		
	}
	public static String ConCon(String a){
		String twocons = "[^AEIOUaeiou \\s][^AEIOUaeiou \\s]";
		String aeiou = "[AEIOUaeiou]";
		String returnit = "";
		Pattern p = Pattern.compile(aeiou);
		
		Matcher m = p.matcher(a);
		boolean result = m.find();
		if(result){
			Matcher m2 = p.matcher(a);
			System.out.println(a+"way");
			returnit= a +"way";
		}
		return returnit;
		
		
	}
	
	public static String Con(String string){
		 String regex = "(^[^AEIOUaeiou \\s][^AEIOUaeiou \\s])";
		 String returnit="";
		 String subst = "";

		 Pattern pattern = Pattern.compile(regex, Pattern.MULTILINE);
		 Matcher matcher = pattern.matcher(string);
		 boolean result = matcher.find();
			if(result){
		 String add = matcher.group(1);
		 String result2 = matcher.replaceAll(subst);
		 
		returnit=result2 + add +"ay";
			}
			
			return returnit;	
		// The substituted value will be contained in the result variable

	}
	public static String ConVowel(String string){
		String regex = "^([^AEIOUaeiou]+([AEIOUaeiou]))";
		
		String regex2 =	"^[^AEIOUaeiou]";
		String returnit = "";
		Pattern pattern = Pattern.compile(regex);
		Matcher matcher = pattern.matcher(string);
		String subst = "";
		Pattern pattern2 = Pattern.compile(regex2);
		Matcher matcher2 = pattern2.matcher(string);
		//String add = matcher.group(1);
		
		if (matcher2.find()) {
		   
		    String add = matcher2.group(0);
		    String result2 = matcher2.replaceAll(subst);
		    
		    
		    //System.out.println(add);
		    returnit = add.toLowerCase() + "ay";
		    }
		
			return returnit;
	
	}
		
		
		
	}
	



