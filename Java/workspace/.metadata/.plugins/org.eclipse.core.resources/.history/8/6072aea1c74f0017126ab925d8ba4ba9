package Presidents;

import java.util.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

public class Reader {
	static List<President> presList = new ArrayList<>();

	public static void Reader() {
		BufferedReader bufIn = null;
		try {
			bufIn = new BufferedReader(new FileReader("presidents.csv"));

			String line;
			while ((line = bufIn.readLine()) != null) {
				String[] presArr = line.split(", ");
				President newPres = new President();

				newPres.setTermNumber(Integer.parseInt(presArr[0]));
				newPres.setFirstName(presArr[1]);
				newPres.setMiddleName(presArr[2] + " ");
				newPres.setLastName(presArr[3]);
				String[] term = presArr[4].split("-");
				newPres.setStartYear(Integer.parseInt(term[0]));
				newPres.setEndYear(Integer.parseInt(term[1]));
				newPres.setParty(presArr[5]);

				presList.add(newPres);

			}
			printPresidents();
			System.out.println();
			List<President> partyList = makePartyList(presList, "Whig");
			for (int i = 0; i < partyList.size(); i++) {
				System.out.println(partyList.get(i));
			}
			System.out.println();
			List<President> middleNameList = makeMiddleNameList(presList);
			for (int i = 0; i < middleNameList.size(); i++){
				System.out.println(middleNameList.get(i));
			}
			System.out.println();
			List<President> lessThanFour = makeTermList(presList);
			for (int i = 0; i < lessThanFour.size(); i++){
				System.out.println(lessThanFour.get(i));
			}
			System.out.println();
			List<President> startsWithR = makeLastNameRList(presList, "R");
			for (int i = 0; i < lessThanFour.size(); i++){
				System.out.println(lessThanFour.get(i));
			}
			
		} catch (IOException e) {
			System.err.println(e);
		} finally {
			if (bufIn != null) {
				try {
					bufIn.close();
				} catch (IOException e) {
					System.err.println(e);
				}
			}
		}
	}

	public static void main(String[] args) {
		Reader();
	}

	public static void printPresidents() {
		for (President president : presList) {
			System.out.println(president);
		}
	}
	
	public static List<President> makePartyList(List<President> p, String party) {
		List<President> presParty = new ArrayList<>(); 
		for (int i = 0; i < p.size(); i++) {
			if (presList.get(i).getParty().equals(party)) {
				presParty.add(p.get(i));
			}
		}
		return presParty;
	}
	
	public static List<President> makeMiddleNameList(List<President> p) {
		List<President> presParty = new ArrayList<>(); 
		for (int i = 0; i < p.size(); i++) {
			if (! presList.get(i).getMiddleName().equals(" ")) {
				presParty.add(p.get(i));
			}
		}
		return presParty;
	}
	public static List<President> makeTermList(List<President> p) {
		List<President> presParty = new ArrayList<>(); 
		for (int i = 0; i < p.size(); i++) {
			if ((presList.get(i).getEndYear()) - (presList.get(i).getStartYear()) < 4) {
				presParty.add(p.get(i));
			}
		}
		return presParty;
	}
	public static List<President> makeTermList(List<President> p) {
		List<President> presParty = new ArrayList<>(); 
		for (int i = 0; i < p.size(); i++) {
			if ((presList.get(i).getEndYear()) - (presList.get(i).getStartYear()) < 4) {
				presParty.add(p.get(i));
			}
		}
		return presParty;
	}
	public static List<President> makeLastNameRList(List<President> p, String key) {
		List<President> presParty = new ArrayList<>(); 
		for (int i = 0; i < p.size(); i++) {
			if ((presList.get(i).getLastName().startsWith(key))) {
				presParty.add(p.get(i));
			}
		}
		return presParty;
	}
}
